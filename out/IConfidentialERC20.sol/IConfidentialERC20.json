{"abi":[{"type":"function","name":"allowance","inputs":[{"name":"owner","type":"address","internalType":"address"},{"name":"spender","type":"address","internalType":"address"}],"outputs":[{"name":"allowance","type":"uint256","internalType":"euint64"}],"stateMutability":"view"},{"type":"function","name":"approve","inputs":[{"name":"spender","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"euint64"}],"outputs":[{"name":"isSuccess","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"approve","inputs":[{"name":"spender","type":"address","internalType":"address"},{"name":"encryptedAmount","type":"bytes32","internalType":"einput"},{"name":"inputProof","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"isSuccess","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"balanceOf","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"balance","type":"uint256","internalType":"euint64"}],"stateMutability":"view"},{"type":"function","name":"decimals","inputs":[],"outputs":[{"name":"decimals","type":"uint8","internalType":"uint8"}],"stateMutability":"view"},{"type":"function","name":"name","inputs":[],"outputs":[{"name":"name","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"symbol","inputs":[],"outputs":[{"name":"symbol","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"totalSupply","inputs":[],"outputs":[{"name":"totalSupply","type":"uint64","internalType":"uint64"}],"stateMutability":"view"},{"type":"function","name":"transfer","inputs":[{"name":"to","type":"address","internalType":"address"},{"name":"encryptedAmount","type":"bytes32","internalType":"einput"},{"name":"inputProof","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"isSuccess","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"transfer","inputs":[{"name":"to","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"euint64"}],"outputs":[{"name":"isSuccess","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"transferFrom","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"euint64"}],"outputs":[{"name":"isSuccess","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"transferFrom","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"encryptedAmount","type":"bytes32","internalType":"einput"},{"name":"inputProof","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"isSuccess","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"event","name":"Approval","inputs":[{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"spender","type":"address","indexed":true,"internalType":"address"},{"name":"placeholder","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"Transfer","inputs":[{"name":"from","type":"address","indexed":true,"internalType":"address"},{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"transferId","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,bytes32,bytes)":"b32c1001","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,bytes32,bytes)":"7b7e0a5a","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,bytes32,bytes)":"9a094352","transferFrom(address,address,uint256)":"23b872dd"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"placeholder\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"transferId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"euint64\",\"name\":\"allowance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"euint64\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isSuccess\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"einput\",\"name\":\"encryptedAmount\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"inputProof\",\"type\":\"bytes\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isSuccess\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"euint64\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"totalSupply\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"einput\",\"name\":\"encryptedAmount\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"inputProof\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isSuccess\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"euint64\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isSuccess\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"euint64\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isSuccess\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"einput\",\"name\":\"encryptedAmount\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"inputProof\",\"type\":\"bytes\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isSuccess\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"params\":{\"owner\":\"Owner address.\",\"placeholder\":\"Placeholder.\",\"spender\":\"Spender address.\"}},\"Transfer(address,address,uint256)\":{\"params\":{\"from\":\"Sender address.\",\"to\":\"Receiver address.\",\"transferId\":\"If the implementation does not support error handling, it must be set to a default                      placeholder (typically equal to max(uint256). However, it must be set to a transferId                      if the implementation supports encrypted error handling.\"}}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"params\":{\"owner\":\"Owner address.\",\"spender\":\"Spender address.\"},\"returns\":{\"allowance\":\"   Allowance handle of the spender on behalf of the owner.\"}},\"approve(address,bytes32,bytes)\":{\"params\":{\"encryptedAmount\":\"Encrypted amount.\",\"inputProof\":\"Input proof.\",\"spender\":\"Spender address.\"},\"returns\":{\"isSuccess\":\"       Whether it succeeds.\"}},\"approve(address,uint256)\":{\"params\":{\"amount\":\"Encrypted amount.\",\"spender\":\"Spender address.\"},\"returns\":{\"isSuccess\":\"       Whether it succeeds.\"}},\"balanceOf(address)\":{\"params\":{\"account\":\"Account address.\"},\"returns\":{\"balance\":\" Balance handle of the `account`.\"}},\"decimals()\":{\"returns\":{\"decimals\":\"Number of decimals (e.g. 6).\"}},\"name()\":{\"returns\":{\"name\":\"    Name of the token (e.g. \\\"TestToken\\\").\"}},\"symbol()\":{\"returns\":{\"symbol\":\"  Symbol of the token (e.g. \\\"TEST\\\").\"}},\"totalSupply()\":{\"returns\":{\"totalSupply\":\" Total supply of the token.\"}},\"transfer(address,bytes32,bytes)\":{\"params\":{\"encryptedAmount\":\"Encrypted amount.\",\"inputProof\":\"Input proof.\",\"to\":\"Receiver address.\"},\"returns\":{\"isSuccess\":\"       Whether it succeeds.\"}},\"transfer(address,uint256)\":{\"params\":{\"amount\":\"Encrypted amount.\",\"to\":\"Receiver address.\"},\"returns\":{\"isSuccess\":\"   Whether it succeeds.\"}},\"transferFrom(address,address,bytes32,bytes)\":{\"params\":{\"encryptedAmount\":\"Encrypted amount.\",\"from\":\"Sender address.\",\"inputProof\":\"Input proof.\",\"to\":\"Receiver address.\"},\"returns\":{\"isSuccess\":\"       Whether it succeeds.\"}},\"transferFrom(address,address,uint256)\":{\"params\":{\"amount\":\"Encrypted amount.\",\"from\":\"Sender address.\",\"to\":\"Receiver address.\"},\"returns\":{\"isSuccess\":\"   Whether it succeeds.\"}}},\"title\":\"IConfidentialERC20.\",\"version\":1},\"userdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"notice\":\"Emitted when the allowance of a `spender` for an `owner` is set by                      a call to {approve}.\"},\"Transfer(address,address,uint256)\":{\"notice\":\"Emitted when tokens are moved from one account (`from`) to                      another (`to`).\"}},\"kind\":\"user\",\"methods\":{\"allowance(address,address)\":{\"notice\":\"Return the remaining number of tokens that `spender` is allowed to spend                      on behalf of the `owner`.\"},\"approve(address,bytes32,bytes)\":{\"notice\":\"Set the `encryptedAmount` as the allowance of `spender` over the caller's tokens.\"},\"approve(address,uint256)\":{\"notice\":\"Set the `amount` as the allowance of `spender` over the caller's tokens.\"},\"balanceOf(address)\":{\"notice\":\"Return the balance handle of the `account`.\"},\"decimals()\":{\"notice\":\"Return the number of decimals.\"},\"name()\":{\"notice\":\"Return the name of the token.\"},\"symbol()\":{\"notice\":\"Return the symbol of the token.\"},\"totalSupply()\":{\"notice\":\"Return the total supply of the token.\"},\"transfer(address,bytes32,bytes)\":{\"notice\":\"Transfer an encrypted amount from the message sender address to the `to` address.\"},\"transfer(address,uint256)\":{\"notice\":\"Transfer an amount from the message sender address to the `to` address.\"},\"transferFrom(address,address,bytes32,bytes)\":{\"notice\":\"Transfer `encryptedAmount` tokens using the caller's allowance.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfer `amount` tokens using the caller's allowance.\"}},\"notice\":\"Interface that defines ERC20-like tokens with encrypted balances.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/httpz-contracts/contracts/token/ERC20/IConfidentialERC20.sol\":\"IConfidentialERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ensdomains/=lib/v4-core/node_modules/@ensdomains/\",\":@httpz-contracts/=lib/httpz-contracts/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/universal-router/=lib/universal-router.git/\",\":@uniswap/v2-core/=lib/v2-core/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/universal-router.git/lib/v3-periphery/\",\":@uniswap/v4-core/=lib/v4-core/\",\":@uniswap/v4-periphery/=lib/v4-periphery/\",\":chainlink/=lib/chainlink/\",\":ds-test/=lib/permit2/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":fhevm-contracts/=node_modules/fhevm-contracts/\",\":fhevm-core-contracts/=node_modules/fhevm-core-contracts/\",\":fhevm/=node_modules/fhevm/\",\":forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":httpz-contracts/=lib/httpz-contracts/contracts/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":permit2/=lib/permit2/\",\":solmate/=lib/permit2/lib/solmate/\",\":universal-router.git/=lib/universal-router.git/\",\":v2-core/=lib/v2-core/contracts/\",\":v3-core/=lib/v3-core/\",\":v3-periphery/=lib/universal-router.git/lib/v3-periphery/contracts/\",\":v4-core/=lib/v4-core/src/\",\":v4-periphery/=lib/v4-periphery/\"],\"viaIR\":true},\"sources\":{\"lib/httpz-contracts/contracts/token/ERC20/IConfidentialERC20.sol\":{\"keccak256\":\"0xe016a085f72ca3cf6d78ec1cb2182a398106cb7d425e984776a9caab0bad2569\",\"license\":\"BSD-3-Clause-Clear\",\"urls\":[\"bzz-raw://3e79dc5075469d660908f5f8b6d0c863b14459d60a0b06fb786d58de8cf30a94\",\"dweb:/ipfs/QmePGRGtoWBnQ8T6ZRyZgiwVh4r67kcmWejwKgjyYN4AAY\"]},\"node_modules/fhevm/lib/Impl.sol\":{\"keccak256\":\"0x89d4968cd956a8931f1a8a177b3bef1c6cf88a03665083db74430add50b88f21\",\"license\":\"BSD-3-Clause-Clear\",\"urls\":[\"bzz-raw://aaaef2c82d56dacfb08946842ea1ce26757d13f3251de62fa79222232dfcb43c\",\"dweb:/ipfs/QmQ6QZPxJw9jb3qjRYCX7pMQVoYogjTsYgmdEnB3EnwFRy\"]},\"node_modules/fhevm/lib/TFHE.sol\":{\"keccak256\":\"0x221799c8332f83ab65a0b71746409f0c2c89f1cd8d9ba4091d967c667e1df734\",\"license\":\"BSD-3-Clause-Clear\",\"urls\":[\"bzz-raw://2dba387fbc612a2ee64063b0ee6c27304b3944423d11045acc50abd84577fb5f\",\"dweb:/ipfs/QmThptDGnpd8PuncFk1rnQoCzEqwUED622yC9xZgFhwY59\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address","indexed":true},{"internalType":"address","name":"spender","type":"address","indexed":true},{"internalType":"uint256","name":"placeholder","type":"uint256","indexed":false}],"type":"event","name":"Approval","anonymous":false},{"inputs":[{"internalType":"address","name":"from","type":"address","indexed":true},{"internalType":"address","name":"to","type":"address","indexed":true},{"internalType":"uint256","name":"transferId","type":"uint256","indexed":false}],"type":"event","name":"Transfer","anonymous":false},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"stateMutability":"view","type":"function","name":"allowance","outputs":[{"internalType":"euint64","name":"allowance","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"euint64","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"approve","outputs":[{"internalType":"bool","name":"isSuccess","type":"bool"}]},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"einput","name":"encryptedAmount","type":"bytes32"},{"internalType":"bytes","name":"inputProof","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"approve","outputs":[{"internalType":"bool","name":"isSuccess","type":"bool"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"balanceOf","outputs":[{"internalType":"euint64","name":"balance","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"decimals","outputs":[{"internalType":"uint8","name":"decimals","type":"uint8"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"name","outputs":[{"internalType":"string","name":"name","type":"string"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"symbol","outputs":[{"internalType":"string","name":"symbol","type":"string"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"totalSupply","outputs":[{"internalType":"uint64","name":"totalSupply","type":"uint64"}]},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"einput","name":"encryptedAmount","type":"bytes32"},{"internalType":"bytes","name":"inputProof","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"transfer","outputs":[{"internalType":"bool","name":"isSuccess","type":"bool"}]},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"euint64","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"transfer","outputs":[{"internalType":"bool","name":"isSuccess","type":"bool"}]},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"euint64","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"transferFrom","outputs":[{"internalType":"bool","name":"isSuccess","type":"bool"}]},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"einput","name":"encryptedAmount","type":"bytes32"},{"internalType":"bytes","name":"inputProof","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"transferFrom","outputs":[{"internalType":"bool","name":"isSuccess","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"allowance(address,address)":{"params":{"owner":"Owner address.","spender":"Spender address."},"returns":{"allowance":"   Allowance handle of the spender on behalf of the owner."}},"approve(address,bytes32,bytes)":{"params":{"encryptedAmount":"Encrypted amount.","inputProof":"Input proof.","spender":"Spender address."},"returns":{"isSuccess":"       Whether it succeeds."}},"approve(address,uint256)":{"params":{"amount":"Encrypted amount.","spender":"Spender address."},"returns":{"isSuccess":"       Whether it succeeds."}},"balanceOf(address)":{"params":{"account":"Account address."},"returns":{"balance":" Balance handle of the `account`."}},"decimals()":{"returns":{"decimals":"Number of decimals (e.g. 6)."}},"name()":{"returns":{"name":"    Name of the token (e.g. \"TestToken\")."}},"symbol()":{"returns":{"symbol":"  Symbol of the token (e.g. \"TEST\")."}},"totalSupply()":{"returns":{"totalSupply":" Total supply of the token."}},"transfer(address,bytes32,bytes)":{"params":{"encryptedAmount":"Encrypted amount.","inputProof":"Input proof.","to":"Receiver address."},"returns":{"isSuccess":"       Whether it succeeds."}},"transfer(address,uint256)":{"params":{"amount":"Encrypted amount.","to":"Receiver address."},"returns":{"isSuccess":"   Whether it succeeds."}},"transferFrom(address,address,bytes32,bytes)":{"params":{"encryptedAmount":"Encrypted amount.","from":"Sender address.","inputProof":"Input proof.","to":"Receiver address."},"returns":{"isSuccess":"       Whether it succeeds."}},"transferFrom(address,address,uint256)":{"params":{"amount":"Encrypted amount.","from":"Sender address.","to":"Receiver address."},"returns":{"isSuccess":"   Whether it succeeds."}}},"version":1},"userdoc":{"kind":"user","methods":{"allowance(address,address)":{"notice":"Return the remaining number of tokens that `spender` is allowed to spend                      on behalf of the `owner`."},"approve(address,bytes32,bytes)":{"notice":"Set the `encryptedAmount` as the allowance of `spender` over the caller's tokens."},"approve(address,uint256)":{"notice":"Set the `amount` as the allowance of `spender` over the caller's tokens."},"balanceOf(address)":{"notice":"Return the balance handle of the `account`."},"decimals()":{"notice":"Return the number of decimals."},"name()":{"notice":"Return the name of the token."},"symbol()":{"notice":"Return the symbol of the token."},"totalSupply()":{"notice":"Return the total supply of the token."},"transfer(address,bytes32,bytes)":{"notice":"Transfer an encrypted amount from the message sender address to the `to` address."},"transfer(address,uint256)":{"notice":"Transfer an amount from the message sender address to the `to` address."},"transferFrom(address,address,bytes32,bytes)":{"notice":"Transfer `encryptedAmount` tokens using the caller's allowance."},"transferFrom(address,address,uint256)":{"notice":"Transfer `amount` tokens using the caller's allowance."}},"version":1}},"settings":{"remappings":["@chainlink/=lib/chainlink/","@ensdomains/=lib/v4-core/node_modules/@ensdomains/","@httpz-contracts/=lib/httpz-contracts/contracts/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@uniswap/universal-router/=lib/universal-router.git/","@uniswap/v2-core/=lib/v2-core/","@uniswap/v3-core/=lib/v3-core/","@uniswap/v3-periphery/=lib/universal-router.git/lib/v3-periphery/","@uniswap/v4-core/=lib/v4-core/","@uniswap/v4-periphery/=lib/v4-periphery/","chainlink/=lib/chainlink/","ds-test/=lib/permit2/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","eth-gas-reporter/=node_modules/eth-gas-reporter/","fhevm-contracts/=node_modules/fhevm-contracts/","fhevm-core-contracts/=node_modules/fhevm-core-contracts/","fhevm/=node_modules/fhevm/","forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","hardhat-deploy/=node_modules/hardhat-deploy/","hardhat/=node_modules/hardhat/","httpz-contracts/=lib/httpz-contracts/contracts/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","permit2/=lib/permit2/","solmate/=lib/permit2/lib/solmate/","universal-router.git/=lib/universal-router.git/","v2-core/=lib/v2-core/contracts/","v3-core/=lib/v3-core/","v3-periphery/=lib/universal-router.git/lib/v3-periphery/contracts/","v4-core/=lib/v4-core/src/","v4-periphery/=lib/v4-periphery/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/httpz-contracts/contracts/token/ERC20/IConfidentialERC20.sol":"IConfidentialERC20"},"evmVersion":"cancun","libraries":{},"viaIR":true},"sources":{"lib/httpz-contracts/contracts/token/ERC20/IConfidentialERC20.sol":{"keccak256":"0xe016a085f72ca3cf6d78ec1cb2182a398106cb7d425e984776a9caab0bad2569","urls":["bzz-raw://3e79dc5075469d660908f5f8b6d0c863b14459d60a0b06fb786d58de8cf30a94","dweb:/ipfs/QmePGRGtoWBnQ8T6ZRyZgiwVh4r67kcmWejwKgjyYN4AAY"],"license":"BSD-3-Clause-Clear"},"node_modules/fhevm/lib/Impl.sol":{"keccak256":"0x89d4968cd956a8931f1a8a177b3bef1c6cf88a03665083db74430add50b88f21","urls":["bzz-raw://aaaef2c82d56dacfb08946842ea1ce26757d13f3251de62fa79222232dfcb43c","dweb:/ipfs/QmQ6QZPxJw9jb3qjRYCX7pMQVoYogjTsYgmdEnB3EnwFRy"],"license":"BSD-3-Clause-Clear"},"node_modules/fhevm/lib/TFHE.sol":{"keccak256":"0x221799c8332f83ab65a0b71746409f0c2c89f1cd8d9ba4091d967c667e1df734","urls":["bzz-raw://2dba387fbc612a2ee64063b0ee6c27304b3944423d11045acc50abd84577fb5f","dweb:/ipfs/QmThptDGnpd8PuncFk1rnQoCzEqwUED622yC9xZgFhwY59"],"license":"BSD-3-Clause-Clear"}},"version":1},"id":41}